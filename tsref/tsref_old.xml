<?xml version="1.0" encoding="utf-8"?>
<tsref>
  <type id="addParams" name="addParams">
    <property name="_offset" type="int" />
    <property name="__list" type="stdWrap" />
  </type>
  <type id="array" />
  <type id="array">
    <description>
      <![CDATA[sequence of subproperties like
array.10
array.20
array.30
...]]>
</description>
  </type>
  <type id="ARR_languages_strings" name="ARR_languages_strings">
    <property name="default" type="string" />
    <property name="en" type="string" />
    <property name="dk" type="string" />
    <property name="de" type="string" />
    <property name="no" type="string" />
    <property name="it" type="string" />
    <property name="fr" type="string" />
    <property name="nl" type="string" />
    <property name="cz" type="string" />
    <property name="pl" type="string" />
    <property name="si" type="string" />
    <property name="fi" type="string" />
    <property name="tr" type="string" />
    <property name="se" type="string" />
    <property name="pt" type="string" />
    <property name="ru" type="string" />
    <property name="ro" type="string" />
    <property name="ch" type="string" />
    <property name="sk" type="string" />
    <property name="lt" type="string" />
    <property name="is" type="string" />
    <property name="hr" type="string" />
    <property name="hu" type="string" />
    <property name="gl" type="string" />
    <property name="th" type="string" />
    <property name="gr" type="string" />
    <property name="hk" type="string" />
    <property name="eu" type="string" />
    <property name="bg" type="string" />
    <property name="br" type="string" />
    <property name="et" type="string" />
    <property name="ar" type="string" />
    <property name="he" type="string" />
    <property name="ua" type="string" />
    <property name="lv" type="string" />
    <property name="jp" type="string" />
    <property name="vn" type="string" />
    <property name="ca" type="string" />
    <property name="ba" type="string" />
    <property name="kr" type="string" />
    <property name="eo" type="string" />
    <property name="my" type="string" />
    <property name="hi" type="string" />
  </type>
  <type id="bool" />
  <type id="CASE" name="CASE">
    <description>
      <![CDATA[kind of switch]]>
</description>
    <property name="if" type="checkIf" />
    <property name="setCurrent" type="stdWrap" />
    <property name="key" type="stdWrap" />
    <property name="__list" type="cObjGetSingle" />
    <property name="stdWrap" type="stdWrap" />
    <property name="if" type="checkIf">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="checkIf">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="stdWrap">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="CASE">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="COA">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="EDITPANEL">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="EDITPANEL">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="if" type="EDITPANEL">
      <description>
        <![CDATA[test dfg sdf]]>
</description>
    </property>
    <property name="if" type="stdWrap">
      <description>
        <![CDATA[test dfg sdf]]>
</description>
    </property>
    <property name="if" type="checkIf">
      <description>
        <![CDATA[test dfg sdf]]>
</description>
    </property>
    <property name="if" type="checkIf">
      <description>
        <![CDATA[<script type="text/javascript" src="/javascripts/prototype.js"> </script>
<script type="text/javascript" src="/javascripts/scriptaculos.js"> </script>

<!-- link to scriptaculous select scripts  -->
<script type="text/javascript" src="/javascripts/select.js"> </script>

<!-- link to autocomplete style sheet -->
<link href="/styles/autocomplete.css" rel="stylesheet" type="text/css"></link>]]>
</description>
    </property>
    <property name="if" type="checkIf">
      <description>
        <![CDATA[<script type="text/javascript" src="/javascripts/prototype.js"> </script>
<script type="text/javascript" src="/javascripts/scriptaculos.js"> </script>

<!-- link to scriptaculous select scripts  -->
<script type="text/javascript" src="/javascripts/select.js"> </script>

<!-- link to autocomplete style sheet -->
<link href="/styles/autocomplete.css" rel="stylesheet" type="text/css"></link>]]>
</description>
    </property>
  </type>
  <type id="checkIf" name="checkIf">
    <property name="directReturn" type="bool" />
    <property name="isTrue" type="stdWrap" />
    <property name="isFalse" type="stdWrap" />
    <property name="isPositive" type="stdWrap" />
    <property name="value" type="stdWrap" />
    <property name="isGreaterThan" type="stdWrap" />
    <property name="isLessThan" type="stdWrap" />
    <property name="equals" type="stdWrap" />
    <property name="isInList" type="stdWrap" />
    <property name="negate" type="bool" />
  </type>
  <type id="cImage" name="cImage">
    <property name="file" type="getImgResource" />
    <property name="alttext" type="stdWrap" />
    <property name="__getAltParam" type="func" />
    <property name="border" type="string|deprecated" />
    <property name="params" type="string" />
    <property name="linkWrap" type="wrap" />
    <property name="wrap" type="wrap" />
    <property name="imageLinkWrap" type="imageLinkWrap" />
  </type>
  <type id="CLEARGIF" name="CLEARGIF">
    <description>
      <![CDATA[Inserts a transparent gif-file e.g. for positioning.]]>
</description>
    <property name="width" type="stdWrap" />
    <property name="height" type="stdWrap" />
    <property name="wrap" type="wrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="COA" extends="array" name="COA">
    <description>
      <![CDATA[new revision test hbihihzihguihuoihu]]>
</description>
    <property name="if" type="checkIf" />
    <property name="wrap" type="wrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="cObjGet" extends="array" name="cObjGet" />
  <type id="cObjGetSingle" name="cObjGetSingle">
    <property name="__getObject" type="func" />
  </type>
  <type id="COLUMNS" extends="array" name="COLUMNS">
    <property name="if" type="checkIf" />
    <property name="tableParams" type="string" />
    <property name="TDparams" type="string" />
    <property name="rows" type="int:2-20" />
    <property name="totalWidth" type="int" />
    <property name="gapWidth" type="stdWrap" />
    <property name="gapBgCol" type="stdWrap" />
    <property name="gapLineThickness" type="stdWrap" />
    <property name="gapLineCol" type="stdWrap" />
    <property name="after" type="cObjGetSingle" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="CONFIG" name="CONFIG">
    <property name="listVars" type="list" />
    <property name="uniqueLinkVars" type="bool" />
    <property name="MP_defaults" type="string" />
    <property name="MP_mapRootPoints" type="stringlist" />
    <property name="MP_disableTypolinkClosestMPvalue" type="bool" />
    <property name="headTag" type="tag" />
    <property name="renderCharset" type="string" />
    <property name="metaCharset" type="string" />
    <property name="disableCharsetHeader" type="bool" />
    <property name="enableContentLengthHeader" type="bool" />
    <property name="sendCacheHeaders" type="bool" />
    <property name="sendCacheHeaders_onlyWhenLoginDeniedInBranch" type="bool" />
    <property name="beLoginLinkIPList_login" type="HTML" />
    <property name="doctype" type="string">
      <description>
        <![CDATA[If set, then a document type declaration (and an XML prologue) will be generated. The value can either be a complete doctype or one of the following keywords:

"xhtml_trans" for XHTML 1.0 Transitional doctype.

"xhtml_frames" for XHTML 1.0 Frameset doctype.

"xhtml_strict" for XHTML 1.0 Strict doctype.

"xhtml_basic" for XHTML basic doctype.

"xhtml_11" for XHTML 1.1 doctype.

"xhtml_2" for XHTML 2 doctype.

"none" for NO doctype at all.

Note that the keywords also change the way TYPO3 generates some of the XHTML tags to ensure valid XML. If you set doctype to a string, then you must also set config.xhtmlDoctype (see below).

See "config.htmlTag_setParams" and "config.htmlTag_langKey" for more details on the effect on the html tag.

Default is a DOCTYPE like this:

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">]]>
</description>
    </property>
    <property name="baseURL" type="string">
      <description>
        <![CDATA[This writes the <base> tag in the header of the document. Set this to the value that is expected to be the URL, and append a “/” to the end of the string.

Example:

config.baseURL = http://typo3.org/sub_dir/]]>
</description>
    </property>
    <property name="linkVars" type="string">
      <description>
        <![CDATA[HTTP_GET_VARS, which should be passed on with links in TYPO3. This is compiled into a string stored in $GLOBALS["TSFE"]->linkVars

The values are rawurlencoded in PHP.

You can specify a range of valid values by appending a () after each value. If this range does not match, the variable won't be appended to links. This is very important to prevent that the cache system gets flooded with forged values.

The range may containing one of these values:

   1. [a]-[b] - A range of allowed integer values
   2. int - Only integer values are allowed
   3. [a]|[b]|[c] - A list of allowed strings (whitespaces will be removed)
   4. /[regex]/ - Match against a regular expression (PCRE style)

Example:

config.linkVars = L, print

This will add "&L=[L-value]&print=[print-value]" to all links in TYPO3.

config.linkVars = L(1-3), print

Same as above, but “&L=[L-value]” will only be added if the current value is 1, 2 or 3.

If you want to pass on extension-parameters like

tx_myextension_pi1[myparam1]

then you have to set 
config.linkVars = tx_myextension_pi1]]>
</description>
    </property>
    <property name="index_enable" type="bool">
      <description>
        <![CDATA[Enables cached pages to be indexed.]]>
</description>
    </property>
    <property name="index_externals" type="bool">
      <description>
        <![CDATA[If set, external media linked to on the pages is indexed as well.]]>
</description>
    </property>
  </type>
  <type id="CONTENT" name="CONTENT">
    <property name="table" type="tablename" />
    <property name="renderObj" type="cObjGetSingle" />
    <property name="slide" type="int" />
    <property name="select" type="getQuery" />
    <property name="wrap" type="wrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="CTABLE" name="CTABLE">
    <property name="tableParams" type="string" />
    <property name="cWidth" type="int" />
    <property name="cMargins" type="string" />
    <property name="offset" type="stringxy" />
    <property name="c" type="cObjGet" />
    <property name="lm" type="cObjGet" />
    <property name="tm" type="cObjGet" />
    <property name="rm" type="cObjGet" />
    <property name="bm" type="cObjGet" />
  </type>
  <type id="editIcons" name="editIcons">
    <property name="styleAttribute" type="string" />
    <property name="iconTitle" type="stdWrap" />
    <property name="iconImg" type="stdWrap" />
    <property name="beforeLastTag" type="int" />
  </type>
  <type id="EDITPANEL" name="EDITPANEL">
    <property name="newRecordFromTable" type="tablename" />
    <property name="newRecordInPid" type="int" />
    <property name="onlyCurrentPid" type="bool" />
    <property name="allow" type="string" />
    <property name="line" type="int" />
    <property name="edit" type="Array" />
    <property name="label" type="stdWrap" />
    <property name="innerWrap" type="stdWrap" />
    <property name="outerWrap" type="stdWrap" />
    <property name="previewBorder" type="int" />
  </type>
  <type id="encaps_lineSplit" name="encaps_lineSplit">
    <property name="encapsTagList" type="list" />
    <property name="defaultAlign" type="stdWrap" />
    <property name="remapTag" type="list" />
    <property name="innerStdWrap_all" type="stdWrap" />
    <property name="addAttributes" type="list." />
    <property name="encapsLinesStdWrap" type="list." />
    <property name="removeWrapping" type="bool" />
    <property name="wrapNonWrappedLines" type="wrap" />
  </type>
  <type id="FILE" name="FILE">
    <property name="linkWrap" type="wrap" />
    <property name="wrap" type="wrap" />
    <property name="__getAltParam" type="func" />
    <property name="file" type="stdWrap" />
  </type>
  <type id="filelink" name="filelink">
    <property name="__getATagParams" type="func" />
    <property name="path" type="stdWrap" />
    <property name="jumpurl" type="bool" />
    <property name="icon" type="bool" />
    <property name="icon_image_ext_list" type="stdWrap" />
    <property name="iconCObject" type="cObjGetSingle" />
    <property name="icon_thumbSize" type="stdWrap" />
    <property name="__getAltParam" type="func" />
    <property name="icon_link" type="bool" />
    <property name="size" type="stdWrap" />
    <property name="removePrependedNumbers" type="bool" />
    <property name="labelStdWrap" type="stdWrap" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="wrap" type="wrap" />
    <property name="file" type="stdWrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="getAltParam" name="getAltParam">
    <property name="altText" type="stdWrap" />
    <property name="titleText" type="stdWrap" />
    <property name="longdescURL" type="stdWrap" />
    <property name="emptyTitleHandling" type="list:keepEmpty\\useAlt\\removeAttr" />
  </type>
  <type id="getATagParams" name="getATagParams">
    <property name="ATagParams" type="stdWrap" />
  </type>
  <type id="getImgResource" name="getImgResource">
    <property name="import" type="stdWrap" />
    <property name="width" type="stdWrap" />
    <property name="heigth" type="stdWrap" />
    <property name="ext" type="stdWrap" />
    <property name="maxW" type="stdWrap" />
    <property name="maxH" type="stdWrap" />
    <property name="minW" type="int" />
    <property name="minH" type="int" />
    <property name="m" type="Array" />
    <property name="sample" type="bool" />
    <property name="alternativeTempPath" type="string" />
    <property name="params" type="string" />
    <property name="frame" type="int" />
    <property name="reduceColors" type="int" />
  </type>
  <type id="getQuery" name="getQuery">
    <property name="pidInList" type="stdWrap" />
    <property name="__getWhere" type="func" />
    <property name="selectFields" type="string" />
    <property name="max" type="string" />
    <property name="begin" type="string" />
    <property name="join" type="string" />
    <property name="leftjoin" type="string" />
    <property name="rightjoin" type="string" />
  </type>
  <type id="getWhere" name="getWhere">
    <property name="uidInList" type="string" />
    <property name="pidInList" type="string" />
    <property name="where" type="string" />
    <property name="languageField" type="string" />
    <property name="andWhere" type="stdWrap" />
    <property name="groupBy" type="string" />
    <property name="orderBy" type="string" />
  </type>
  <type id="GIFBUILDER" name="GIFBUILDER">
    <property name="subGifBuilder" type="GIFBUILDER" />
    <property name="backColor" type="stdWrap">
      <description>
        <![CDATA[The background-color of the generated gif.]]>
</description>
    </property>
  </type>
  <type id="GIF_addToMap" name="GIF_addToMap">
    <property name="noBlur" type="bool" />
    <property name="url" type="string" />
    <property name="target" type="string" />
    <property name="titleText" type="string" />
    <property name="altText" type="string" />
  </type>
  <type id="GIF_calcBBox" name="GIF_calcBBox">
    <property name="__GIF_getTextScalFactor" type="func" />
    <property name="__GIF_calcWordSpacing" type="func" />
    <property name="splitRendering" type="GIF_imageTTFBBoxWrapper" />
    <property name="angle" type="string" />
  </type>
  <type id="GIF_calcTextCordsForMap" name="GIF_calcTextCordsForMap">
    <property name="explode" type="offset" />
  </type>
  <type id="GIF_calcWordSpacing" name="GIF_calcWordSpacing">
    <property name="spacing" type="int" />
    <property name="wordSpacing" type="int" />
  </type>
  <type id="GIF_checkTextObj" name="GIF_checkTextObj">
    <property name="fontFile" type="file" />
    <property name="iterations" type="int" />
    <property name="fontSize" type="int" />
    <property name="wordSpacing" type="int" />
    <property name="spacing" type="int" />
    <property name="angle" type="string" />
    <property name="antiAlias" type="bool" />
    <property name="fontColor" type="stdWrap" />
    <property name="text" type="stdWrap" />
    <property name="doNotStripHTML" type="bool" />
    <property name="textMagLength" type="int" />
    <property name="splitRendering" type="GIF_splitRendering" />
  </type>
  <type id="GIF_fontResize" name="GIF_fontResize">
    <property name="maxWidth" type="int" />
    <property name="__GIF_calcWordSpacing" type="func" />
    <property name="fontSize" type="int" />
    <property name="angle" type="string" />
    <property name="fontFile" type="file" />
    <property name="text" type="string" />
    <property name="splitRendering" type="GIF_imageTTFBBoxWrapper" />
  </type>
  <type id="GIF_getResource" name="GIF_getResource">
    <property name="ext" type="string" />
    <property name="__getImgResource" type="func" />
  </type>
  <type id="GIF_getTextScalFactor" name="GIF_getTextScalFactor">
    <property name="niceText" type="bool" />
  </type>
  <type id="GIF_imageTTFBBoxWrapper" name="GIF_imageTTFBBoxWrapper">
    <property name="compX" type="int" />
    <property name="xSpaceBefore" type="int" />
    <property name="xSpaceAfter" type="int" />
    <property name="compY" type="int" />
    <property name="ySpaceBefore" type="int" />
    <property name="ySpaceAfter" type="int" />
    <property name="__GIF_splitRendering" type="func" />
  </type>
  <type id="GIF_makeEmboss" name="GIF_makeEmboss">
    <property name="highColor" type="color" />
    <property name="lowColor" type="color" />
    <property name="offset" type="offset" />
    <property name="__GIF_makeShadow" type="func" />
  </type>
  <type id="GIF_makeOutline" name="GIF_makeOutline">
    <property name="thickness" type="offset" />
    <property name="color" type="color" />
  </type>
  <type id="GIF_makeShadow" name="GIF_makeShadow">
    <property name="color" type="color" />
    <property name="offset" type="offset" />
    <property name="intensity" type="int:0-100" />
    <property name="opacity" type="int:0-100" />
    <property name="blur" type="int:0-99" />
  </type>
  <type id="GIF_makeText" name="GIF_makeText">
    <property name="__GIF_calcWordSpacing" type="func" />
    <property name="__GIF_txtPosition" type="func" />
    <property name="imgMap" type="string" />
    <property name="impMap" type="Array" />
    <property name="hideButCreateMap" type="bool" />
    <property name="fontColor" type="string" />
    <property name="niceText" type="bool" />
    <property name="antiAlias" type="bool" />
    <property name="iterations" type="int" />
    <property name="fontSize" type="int" />
    <property name="angle" type="string" />
    <property name="splitRendering" type="GIF_imageTTFBBoxWrapper" />
  </type>
  <type id="GIF_splitRendering" extends="array" name="GIF_splitRendering" />
  <type id="GIF_txtPosition" name="GIF_txtPosition">
    <property name="angle" type="string" />
    <property name="align" type="list:right\center\left" />
    <property name="offset" type="offset" />
    <property name="__GIF_calcBBox" type="func" />
  </type>
  <type id="GMENU">
    <description>
      <![CDATA[Example:

 MENU = HMENU
  MENU.special = directory
  MENU.special.value = 76
  MENU.entryLevel = 2
  MENU.1 = GMENU
  MENU.1.NO = 1
  MENU.1.NO {
    wrap = |<br>
    XY = 100, 20
    backColor = #723B05
    10 = TEXT
    10.text.field = title
    10.fontColor = #000000
    10.fontFile = fileadmin/fonts/menu.ttf
    10.fontSize = 12
    10.niceText = 1
    10.offset = 7, 15
  
    20 = IMAGE
  }
]]>
</description>
    <property name="NO" type="GIFBUILDER" />
  </type>
  <type id="HMENU" name="HMENU">
    <description>
      <![CDATA[test3 aslkdsgdfgsdf aaösldkfajs df]]>
</description>
    <property name="if" type="checkIf" />
    <property name="stdWrap" type="stdWrap" />
    <property name="minItems" type="int" />
    <property name="maxItems" type="int" />
    <property name="begin" type="int" />
    <property name="entryLevel" type="int" />
    <property name="alwaysActivePIDlist" type="string" />
    <property name="addQueryString" type="bool" />
    <property name="excludeDoktypes" type="intlist" />
    <property name="excludeUidList" type="list" />
    <property name="includeNotInMenu" type="bool" />
    <property name="protectLvar" type="bool" />
    <property name="wrap" type="wrap" />
    <property name="special" type="HMENU_special" />
  </type>
  <type id="HMENU_special">
    <property name="value" type="intlist" />
  </type>
  <type id="HRULER" name="HRULER">
    <property name="lineThickness" type="stdWrap" />
    <property name="lineColor" type="color" />
    <property name="spaceLeft" type="int" />
    <property name="spaceRight" type="int" />
    <property name="tableWidth" type="string" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="HTML" name="HTML">
    <description>
      <![CDATA[mumu revision8 xxxx]]>
</description>
    <property name="value" type="stdWrap" />
  </type>
  <type id="HTMLparser_TSbridge" name="HTMLparser_TSbridge">
    <property name="allowTags" type="list" />
    <property name="tags" type="llist." />
    <property name="localNesting" type="list" />
    <property name="globalNesting" type="list" />
    <property name="rmTagIfNoAttrib" type="list" />
    <property name="noAttrib" type="list" />
    <property name="removeTags" type="list" />
    <property name="xhtml_cleaning" type="bool" />
    <property name="keepNonMatchedTags" type="bool" />
    <property name="htmlSpecialChars" type="intlist:-1,0,1,2" />
  </type>
  <type id="http_makelinks" name="http_makelinks">
    <property name="__getATagParams" type="func" />
    <property name="keep" type="list" />
    <property name="extTarget" type="string" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="IMAGE" name="IMAGE">
    <property name="if" type="checkIf" />
    <property name="stdWrap" type="stdWrap" />
    <property name="wrap" type="wrap" />
    <property name="altText" type="stdWrap" />
    <property name="border" type="int" />
    <property name="longdescURL" type="stdWrap" />
    <property name="linkWrap" type="linkWrap" />
    <property name="imageLinkWrap" type="imageLinkWrap" />
    <property name="file" type="IMG_RESOURCE" />
  </type>
  <type id="imageLinkWrap" name="imageLinkWrap">
    <description>
      <![CDATA[This object wraps the input (an image) with a link.
You can link to the script "showpic.php" with parameters that define such things as the size of the image, the backgroundcolor of the new window and so on. 
Or you could link to another page with the typolink.parameter property.

To enable the imagelink you have to define some properties:
# linking a image to page with id 453
tempImg = IMAGE
tempImg.file = fileadmin/design1/images/flag_de.gif
tempImg.imageLinkWrap.typolink.parameter = 453
tempImg.imageLinkWrap = 1
tempImg.imageLinkWrap.enable = 1 ]]>
</description>
    <property name="--info" type="Array" />
    <property name="enable" type="stdWrap" />
    <property name="typolink" type="typolink" />
    <property name="width" type="int" />
    <property name="height" type="int" />
    <property name="effects" type="string" />
    <property name="sample" type="bool" />
    <property name="alternativeTempPath" type="string" />
    <property name="bodyTag" type="string" />
    <property name="title" type="string" />
    <property name="wrap" type="string" />
    <property name="target" type="string" />
    <property name="JSwindow" type="bool" />
  </type>
  <type id="IMGTEXT" name="TEXT">
    <property name="imgList" type="stdWrap" />
    <property name="imgStart" type="stdWrap" />
    <property name="imgMax" type="stdWrap" />
    <property name="imgPath" type="stdWrap" />
    <property name="captionSplit" type="bool" />
    <property name="imageTextSplit" type="bool" />
    <property name="caption" type="stdWrap" />
    <property name="textPos" type="stdWrap" />
    <property name="textMargin" type="stdWrap" />
    <property name="textMargin_outOfText" type="bool" />
    <property name="cols" type="stdWrap" />
    <property name="rows" type="stdWrap" />
    <property name="colSpace" type="stdWrap" />
    <property name="rowSpace" type="stdWrap" />
    <property name="border" type="stdWrap" />
    <property name="borderCol" type="stdWrap" />
    <property name="borderThick" type="stdWrap" />
    <property name="captionAlign" type="stdWrap" />
    <property name="colRelations" type="stdWrap" />
    <property name="maxWInText" type="stdWrap" />
    <property name="image_compression" type="stdWrap" />
    <property name="image_effects" type="stdWrap" />
    <property name="image_frames" type="Array" />
    <property name="imgObjNum" type="optionSplit" />
    <property name="equalH" type="stdWrap" />
    <property name="noRows" type="stdWrap" />
    <property name="noCols" type="stdWrap" />
    <property name="editIcons" type="editIcons" />
    <property name="noStretchAndMarginCells" type="bool" />
    <property name="netprintApplicationLink" type="netprintApplication_offsiteLinkWrap" />
    <property name="__getAltParam" type="func" />
    <property name="tableStdWrap" type="stdWrap" />
    <property name="spaceBelowAbove" type="stdWrap" />
    <property name="stdWrap" type="stdWrap" />
    <property name="text" type="stdWrap" />
  </type>
  <type id="IMG_RESOURCE" name="IMG_RESOURCE">
    <property name="ext" type="stdWrap" />
    <property name="height" type="stdWrap" />
    <property name="width" type="stdWrap" />
    <property name="width" type="stdWrap" />
    <property name="import" type="stdWrap" />
    <property name="to be continued" type="stdWrap" />
  </type>
  <type id="int">
    <description>
      <![CDATA[integer

(sometimes used generally though another type would have been more appropriate, like "pixels")]]>
</description>
  </type>
  <type id="intlist" />
  <type id="LOAD_REGISTER" name="LOAD_REGISTER">
    <property name="__list" type="stdWrap" />
  </type>
  <type id="mailto_makelinks" name="mailto_makelinks">
    <property name="__getATagParams" type="func" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="MENU_common" name="MENU_common">
    <property name="imgNamePrefix" type="string" />
    <property name="imgNameNotRandom" type="bool" />
    <property name="showAccessRestrictedPages" type="bool" />
    <property name="expAll" type="bool" />
    <property name="alternativeSortingField" type="string" />
    <property name="sectionIndex" type="string" />
    <property name="minItems" type="int" />
    <property name="maxItems" type="int" />
    <property name="begin" type="int" />
    <property name="itemArrayProcFunc" type="string" />
    <property name="NO" type="bool" />
    <property name="RO" type="bool" />
    <property name="IFSUB" type="bool" />
    <property name="IFSUBRO" type="bool" />
    <property name="ACT" type="bool" />
    <property name="ACTRO" type="bool" />
    <property name="ACTIFSUB" type="bool" />
    <property name="ACTIFSUBRO" type="bool" />
    <property name="CUR" type="bool" />
    <property name="CURRO" type="bool" />
    <property name="CURIFSUB" type="bool" />
    <property name="CURIFSUBRO" type="bool" />
    <property name="USR" type="bool" />
    <property name="USRRO" type="bool" />
    <property name="SPC" type="bool" />
    <property name="USERDEF1" type="bool" />
    <property name="USERDEF1RO" type="bool" />
    <property name="USERDEF2" type="bool" />
    <property name="USERDEF2RO" type="bool" />
    <property name="overrideId" type="int" />
    <property name="target" type="string" />
    <property name="collapse" type="bool" />
    <property name="addParams" type="string" />
    <property name="JSWindow" type="bool" />
  </type>
  <type id="MENU_foldout" name="MENU_foldout">
    <property name="arrowNO" type="getImgResource" />
    <property name="arrowACT" type="getImgResource" />
    <property name="dontLinkIfSubmenu" type="bool" />
    <property name="displayActiveOnLoad" type="bool" />
    <property name="dontWrapInTable" type="bool" />
    <property name="arrowImgParams" type="string" />
    <property name="bottomHeight" type="int:0-3000" />
    <property name="bottomContent" type="cObjGetSingle" />
    <property name="adjustItemsH" type="int" />
    <property name="adjustSubItemsH" type="int" />
    <property name="menuWidth" type="int:0-3000" />
    <property name="menuHeight" type="int:0-3000" />
    <property name="menuBackColor" type="color" />
    <property name="bottomBackColor" type="color" />
    <property name="menuOffset" type="offset" />
    <property name="subMenuOffset" type="offset" />
    <property name="foldTimer" type="int:1-3000" />
    <property name="foldSpeed" type="int:1-100" />
    <property name="stayFolded" type="bool" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="MENU_getBeforeAfter" name="MENU_getBeforeAfter">
    <property name="beforeImgTagParams" type="string" />
    <property name="beforeImgLink" type="string" />
    <property name="beforeWrap" type="string" />
    <property name="before" type="stdWrap" />
    <property name="beforeImg" type="getImgResource" />
    <property name="afterImgTagParams" type="string" />
    <property name="afterImgLink" type="string" />
    <property name="afterWrap" type="string" />
    <property name="after" type="stdWrap" />
    <property name="afterImg" type="getImgResource" />
    <property name="beforeROImg" type="getImgResource" />
    <property name="afterROImg" type="getImgResource" />
  </type>
  <type id="MENU_GMENU_common" name="MENU_GMENU_common">
    <property name="debugItemConf" type="bool" />
    <property name="applyTotalH" type="int" />
    <property name="applyTotalW" type="int" />
    <property name="min" type="int" />
    <property name="max" type="int" />
    <property name="useLargestItemX" type="bool" />
    <property name="useLargestItemY" type="bool" />
    <property name="distributeX" type="bool" />
    <property name="distributeY" type="bool" />
    <property name="removeObjectsOfDummy" type="bool" />
    <property name="submenuObjSuffixes" type="string" />
    <property name="accessKey" type="bool" />
    <property name="forceTypeValue" type="string" />
    <property name="noBlur" type="bool" />
    <property name="disableAltText" type="bool" />
    <property name="IProcFunc" type="string" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="MENU_GMENU_ITEM" name="MENU_GMENU_ITEM">
    <property name="__cObjGetSingle" type="func:gifbuildercoa:GIFBUILDER" />
  </type>
  <type id="MENU_GMENU_itemstates" name="MENU_GMENU_itemstates">
    <property name="NO" type="MENU_GMENU_ITEM" />
    <property name="RO" type="MENU_GMENU_ITEM" />
    <property name="IFSUB" type="MENU_GMENU_ITEM" />
    <property name="IFSUBRO" type="MENU_GMENU_ITEM" />
    <property name="ACT" type="MENU_GMENU_ITEM" />
    <property name="ACTRO" type="MENU_GMENU_ITEM" />
    <property name="ACTIFSUB" type="MENU_GMENU_ITEM" />
    <property name="ACTIFSUBRO" type="MENU_GMENU_ITEM" />
    <property name="CUR" type="MENU_GMENU_ITEM" />
    <property name="CURRO" type="MENU_GMENU_ITEM" />
    <property name="CURIFSUB" type="MENU_GMENU_ITEM" />
    <property name="CURIFSUBRO" type="MENU_GMENU_ITEM" />
    <property name="USR" type="MENU_GMENU_ITEM" />
    <property name="USRRO" type="MENU_GMENU_ITEM" />
    <property name="SPC" type="MENU_GMENU_ITEM" />
    <property name="USERDEF1" type="MENU_GMENU_ITEM" />
    <property name="USERDEF1RO" type="MENU_GMENU_ITEM" />
    <property name="USERDEF2" type="MENU_GMENU_ITEM" />
    <property name="USERDEF2RO" type="MENU_GMENU_ITEM" />
  </type>
  <type id="MENU_GMENU_LAYERS_ITEM" name="MENU_GMENU_LAYERS_ITEM">
    <property name="__cObjGetSingle" type="func:gifbuildercoa:GIFBUILDER" />
  </type>
  <type id="MENU_IMGMENU_ITEM" extends="array" name="MENU_IMGMENU_ITEM" />
  <type id="MENU_JSMENU_ITEM" name="MENU_JSMENU_ITEM">
    <property name="noLink" type="bool" />
    <property name="alwaysLink" type="bool" />
    <property name="showActive" type="bool" />
    <property name="showFirst" type="bool" />
    <property name="firstLabel" type="string" />
    <property name="width" type="int" />
    <property name="elements" type="int" />
    <property name="additionalParams" type="string" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="MENU_layers" name="MENU_layers">
    <property name="layer_menu_id" type="string" />
    <property name="displayActiveOnLoad" type="bool" />
    <property name="bordersWithin" type="intlist" />
    <property name="freezeMouseover" type="bool" />
    <property name="lockPosition_addSelf" type="bool" />
    <property name="setFixedHeight" type="int" />
    <property name="setFixedWidth" type="int" />
    <property name="lockPosition_adjust" type="int" />
    <property name="ieSelectFix" type="bool" />
    <property name="hideMenuWhenNotOver" type="int:0-600" />
    <property name="dontHideOnMouseUp" type="bool" />
    <property name="dontFollowMouse" type="bool" />
    <property name="hideMenuTimer" type="int" />
    <property name="layerStyle" type="string" />
    <property name="relativeToTriggerItem" type="bool" />
    <property name="leftOffset" type="int" />
    <property name="topOffset" type="int" />
    <property name="xPosOffset" type="int" />
    <property name="yPosOffset" type="int" />
    <property name="lockPosition" type="list:x\\y" />
    <property name="blankStrEqFalse" type="bool" />
    <property name="directionLeft" type="bool" />
    <property name="directionUp" type="bool" />
    <property name="relativeToParentLayer" type="bool" />
  </type>
  <type id="MENU_TMENU_common" name="MENU_TMENU_common">
    <property name="debugItemConf" type="bool" />
    <property name="submenuObjSuffixes" type="string" />
    <property name="forceTypeValue" type="string" />
    <property name="noBlur" type="bool" />
    <property name="IProcFunc" type="string" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="MENU_TMENU_ITEM" name="MENU_TMENU_ITEM">
    <property name="__getATagParams" type="func" />
    <property name="ATagParams" type="string" />
    <property name="addATagParams" type="string" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="altTarget" type="string" />
    <property name="ATagTitle" type="string" />
    <property name="RO_chBgColor" type="string" />
    <property name="doNotLinkIt" type="bool" />
    <property name="linkWrap" type="string" />
    <property name="ATagTitle" type="stdWrap" />
    <property name="__MENU_getBeforeAfter" type="func" />
    <property name="allWrap" type="stdWrap" />
    <property name="subst_elementUid" type="bool" />
    <property name="allStdWrap" type="stdWrap" />
    <property name="stdWrap" type="stdWrap" />
    <property name="stdWrap2" type="stdWrap" />
    <property name="wrapItemAndSub" type="string" />
  </type>
  <type id="MENU_TMENU_itemstates" name="MENU_TMENU_itemstates">
    <property name="NO" type="MENU_TMENU_ITEM" />
    <property name="RO" type="MENU_TMENU_ITEM" />
    <property name="IFSUB" type="MENU_TMENU_ITEM" />
    <property name="IFSUBRO" type="MENU_TMENU_ITEM" />
    <property name="ACT" type="MENU_TMENU_ITEM" />
    <property name="ACTRO" type="MENU_TMENU_ITEM" />
    <property name="ACTIFSUB" type="MENU_TMENU_ITEM" />
    <property name="ACTIFSUBRO" type="MENU_TMENU_ITEM" />
    <property name="CUR" type="MENU_TMENU_ITEM" />
    <property name="CURRO" type="MENU_TMENU_ITEM" />
    <property name="CURIFSUB" type="MENU_TMENU_ITEM" />
    <property name="CURIFSUBRO" type="MENU_TMENU_ITEM" />
    <property name="USR" type="MENU_TMENU_ITEM" />
    <property name="USRRO" type="MENU_TMENU_ITEM" />
    <property name="SPC" type="MENU_TMENU_ITEM" />
    <property name="USERDEF1" type="MENU_TMENU_ITEM" />
    <property name="USERDEF1RO" type="MENU_TMENU_ITEM" />
    <property name="USERDEF2" type="MENU_TMENU_ITEM" />
    <property name="USERDEF2RO" type="MENU_TMENU_ITEM" />
  </type>
  <type id="MENU_TMENU_LAYERS_ITEM" name="MENU_TMENU_LAYERS_ITEM">
    <property name="__getATagParams" type="func" />
    <property name="ATagParams" type="string" />
    <property name="addATagParams" type="string" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="altTarget" type="string" />
    <property name="ATagTitle" type="string" />
    <property name="RO_chBgColor" type="string" />
    <property name="doNotLinkIt" type="bool" />
    <property name="linkWrap" type="string" />
    <property name="ATagTitle" type="stdWrap" />
    <property name="__MENU_getBeforeAfter" type="func" />
    <property name="allWrap" type="stdWrap" />
    <property name="subst_elementUid" type="bool" />
    <property name="allStdWrap" type="stdWrap" />
    <property name="stdWrap" type="stdWrap" />
    <property name="stdWrap2" type="stdWrap" />
    <property name="wrapItemAndSub" type="string" />
  </type>
  <type id="MULTIMEDIA" name="MULTIMEDIA">
    <property name="file" type="stdWrap" />
    <property name="params" type="stdWrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="netprintApplication_offsiteLinkWrap" name="netprintApplication_offsiteLinkWrap">
    <property name="url" type="string" />
    <property name="thisUrl" type="string" />
    <property name="linkOnlyPixelsAbove" type="int" />
    <property name="cObject" type="cObjGetSingle" />
    <property name="__getATagParams" type="func" />
    <property name="outerStdWrap" type="stdWrap" />
    <property name="before" type="bool" />
  </type>
  <type id="NO_TXT">
    <description>
      <![CDATA[The text menuitem.
The default “Normal” state rendering of Item. This is required for all menus.

If you specify properties for the “NO” property you do not have to set it “1”. Otherwise with no properties setting “NO=1” will render the menu anyways (for TMENU this may make sense).

The simplest menu TYPO3 can generate is then:

page.20 = HMENU
page.20.1 = TMENU
page.20.1.NO = 1

That will be pure <a> tags wrapped around page titles.]]>
</description>
  </type>
  <type id="numRows" name="numRows">
    <property name="table" type="tablename" />
    <property name="select" type="getQuery" />
  </type>
  <type id="OTABLE" name="OTABLE">
    <property name="__cObjGet" type="func" />
    <property name="tableParams" type="string" />
    <property name="offset" type="stringxy" />
  </type>
  <type id="PAGE" extends="array" name="PAGE">
    <property name="typeNum" type="int" />
    <property name="wrap" type="wrap" />
    <property name="stdWrap" type="stdWrap" />
    <property name="bodyTagCObject" type="cObject" />
    <property name="bodyTag" type="tag" />
    <property name="headTag" type="tag" />
    <property name="bodyTagMargins" type="int" />
    <property name="config" type="CONFIG" />
    <property name="includeCSS" type="array">
      <description>
        <![CDATA[Inserts a stylesheet (just like the .stylesheet property) by allows to setting up more than a single stylesheet, because you can enter files in an array.

The file definition must be a valid "resource" datatype, otherwise nothing is inserted.

Each file has optional properties:

.media - setting the media attribute of the <style> tag.

.title - setting the title of the <style> tag.

.alternate - If set (boolean) then the rel-attribute will be "alternate stylesheet"

.import - If set (boolean) then the @import way of including a stylesheet is used instead of <link>

Example:

includeCSS {
  file1 = fileadmin/mystylesheet1.css
  file2 = stylesheet_uploaded_to_template*.css
  file2.title = High contrast
  file2.media = print

}]]>
</description>
    </property>
    <property name="includeJS" type="array">
      <description>
        <![CDATA[Inserts one or more (Java)Scripts in <script> tags.

The file definition must be a valid "resource" datatype, otherwise nothing is inserted.

Each file has optional properties:

.style - setting the MIME type of the script (default: text/javascript)

Example:

includeJS {
  file1 = fileadmin/helloworld.js
  file1.type = application/x-javascript
  file2 = javascript_uploaded_to_template*.js
}]]>
</description>
    </property>
    <property name="headerData" type="array">
      <description>
        <![CDATA[Inserts content in the header-section. Could be JavaScripts, meta-tags, other stylesheet references.

Is inserted after all the style-definitions.]]>
</description>
    </property>
  </type>
  <type id="parseFunc" name="parseFunc">
    <property name="externalBlocks" type="list." />
  </type>
  <type id="PHP_SCRIPT" name="PHP_SCRIPT">
    <property name="file" type="file" />
    <property name="__custom" type="true" />
  </type>
  <type id="RECORDS" name="RECORDS">
    <property name="source" type="stdWrap" />
    <property name="tables" type="tablenamelist" />
    <property name="dontCheckPid" type="bool" />
    <property name="wrap" type="wrap" />
    <property name="conf" type="list." />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="RESTOR_REGISTER" name="RESTOR_REGISTER" />
  <type id="SEARCHRESULT" name="SEARCHRESULT">
    <property name="allowedCols" type="string" />
    <property name="addExtUrlsAndShortCuts" type="bool" />
    <property name="languageField" type="tablename" />
    <property name="range" type="int" />
    <property name="noOrderBy" type="bool" />
    <property name="target" type="string" />
    <property name="layout" type="cObjGetSingle" />
    <property name="next" type="cObjGetSingle" />
    <property name="prev" type="cObjGetSingle" />
    <property name="renderObj" type="cObjGetSingle" />
    <property name="renderWrap" type="wrap" />
    <property name="noResultObj" type="cObjGetSingle" />
    <property name="wrap" type="wrap" />
    <property name="stdWrap" type="stdWrap" />
  </type>
  <type id="splitObj" name="splitObj">
    <property name="token" type="stdWrap" />
    <property name="min" type="stdWrap" />
    <property name="max" type="stdWrap" />
    <property name="returnKey" type="stdWrap" />
    <property name="wrap" type="string" />
    <property name="cObjNum" type="string" />
    <property name="__intlist" type="stdWrap" />
  </type>
  <type id="stdWrap" name="stdWrap">
    <description>
      <![CDATA[Diese Funktion wird häufig als Eigenschaft zu Werten in TypoScript hinzugefügt.

Ein Beispiel am Inhaltsobjekt »HTML:
10 = HTML
10.value = Irgendein Text
10.value.case = upper

In diesem Beispiel wird der Inhalt des Objekts "10" in Großbuchstaben umgewandelt, bevor er zurückgeliefert wird.

Die stdWrap-Eigenschaften werden in der Reihenfolge ausgeführt, in der sie in der untenstehenden Tabelle aufgeführt sind. Wollen Sie dieses Thema vertiefen, schauen Sie sich die tslib/content.php, Funktion stdWrap() an.]]>
</description>
    <property name="setContentToCurrent" type="bool" />
    <property name="setCurrent" type="stdWrap" />
    <property name="lang" type="ARR_languages_strings." />
    <property name="parentFields" type="stdWrap" />
    <property name="data" type="string" />
    <property name="field" type="string" />
    <property name="current" type="bool" />
    <property name="cObject" type="cObjGetSingle" />
    <property name="numRows" type="numRows" />
    <property name="filelist" type="stdWrap" />
    <property name="preUserFunc" type="custom" />
    <property name="override" type="stdWrap" />
    <property name="preIfEmptyListNum" type="string" />
    <property name="ifEmpty" type="stdWrap" />
    <property name="ifBlank" type="stdWrap" />
    <property name="listNum" type="string" />
    <property name="trim" type="bool" />
    <property name="stdWrap" type="stdWrap" />
    <property name="required" type="bool" />
    <property name="if" type="checkIf" />
    <property name="fieldRequired" type="bool" />
    <property name="csConv" type="charset" />
    <property name="parseFunc" type="parseFunc" />
    <property name="HTMLparser" type="HTMLparser_TSbridge" />
    <property name="split" type="splitObj" />
    <property name="prioriCalc" type="int|list:intval" />
    <property name="char" type="int:0-255" />
    <property name="intval" type="bool" />
    <property name="date" type="string" />
    <property name="strftime" type="string" />
    <property name="age" type="string" />
    <property name="case" type="list:upper\\lower" />
    <property name="bytes" type="bool" />
    <property name="substring" type="intlist" />
    <property name="removeBadHTML" type="bool" />
    <property name="stripHtml" type="bool" />
    <property name="crop" type="string" />
    <property name="rawUrlEncode" type="bool" />
    <property name="htmlSpecialChars" type="bool" />
    <property name="doubleBrTag" type="string" />
    <property name="br" type="bool" />
    <property name="brTag" type="string" />
    <property name="encapsLines" type="encaps_lineSplit" />
    <property name="keywords" type="bool" />
    <property name="innerWrap" type="stdWrap" />
    <property name="innerWrap2" type="stdWrap" />
    <property name="fontTag" type="wrap" />
    <property name="addParams" type="addParams" />
    <property name="textStyle" type="textStyle" />
    <property name="tableStyle" type="tableStyle" />
    <property name="filelink" type="filelink" />
    <property name="preCObject" type="cObjGetSingle" />
    <property name="postCObject" type="cObjGetSingle" />
    <property name="wrapAlign" type="stdWrap" />
    <property name="typolink" type="typolink" />
    <property name="TCAselectItem" type="Array" />
    <property name="space" type="string" />
    <property name="spaceBefore" type="stdWrap" />
    <property name="spaceAfter" type="stdWrap" />
    <property name="wrap" type="wrap" />
    <property name="noTrimWrap" type="string" />
    <property name="wrap2" type="wrap" />
    <property name="dataWrap" type="wrap" />
    <property name="prepend" type="cObjGetSingle" />
    <property name="append" type="cObjGetSingle" />
    <property name="wrap3" type="wrap" />
    <property name="outerWrap" type="stdWrap" />
    <property name="insertData" type="bool" />
    <property name="offsetWrap" type="bool" />
    <property name="setCurrent" type="stdWrap">
      <description>
        <![CDATA[test]]>
</description>
    </property>
    <property name="setCurrent" type="stdWrap">
      <description>
        <![CDATA[test23434234]]>
</description>
    </property>
    <property name="setCurrent" type="stdWrap">
      <description>
        <![CDATA[test23434234 sdfsdf
xxxxx]]>
</description>
    </property>
    <property name="setCurrent" type="stdWrap">
      <description>
        <![CDATA[test ]]>
</description>
    </property>
    <property name="setCurrent" type="stdWrap">
      <description>
        <![CDATA[asdfsdfsad safd asdf sd f]]>
</description>
    </property>
  </type>
  <type id="string" />
  <type id="tableStyle" name="tableStyle">
    <property name="params" type="string" />
    <property name="align" type="stdWrap" />
    <property name="border" type="stdWrap" />
    <property name="cellspacing" type="string" />
    <property name="cellpadding" type="stdWrap" />
    <property name="color" type="intlist" />
  </type>
  <type id="TCAlookup" name="TCAlookup">
    <property name="table" type="tablename" />
    <property name="field" type="string" />
    <property name="delimiter" type="string" />
  </type>
  <type id="TEMPLATE" name="TEMPLATE">
    <property name="markerWrap" type="string" />
    <property name="template" type="cObjGetSingle" />
    <property name="workOnSubpart" type="string" />
    <property name="relPathPrefix" type="string" />
    <property name="nonCachedSubst" type="bool" />
    <property name="marks" type="list." />
    <property name="subparts" type="list." />
    <property name="wraps" type="list." />
    <property name="substMarksSeparately" type="bool" />
  </type>
  <type id="TEXT" extends="stdWrap" name="TEXT">
    <description>
      <![CDATA[text asdlfg]]>
</description>
    <property name="value" type="string" />
  </type>
  <type id="textStyle" name="textStyle">
    <property name="properties" type="Array" />
    <property name="face" type="intlist" />
    <property name="size" type="intlist" />
    <property name="color" type="intlist" />
    <property name="align" type="Array" />
    <property name="altWrap" type="string" />
  </type>
  <type id="TMENU">
    <description>
      <![CDATA[A text menu. Has to be created inside a HMENU.

Wrapping the items with a pipe "|" is a challenge if you need it the first time. You could do it like this:

temp.menu1 = HMENU
temp.menu1.1 = TMENU
temp.menu1.1.wrap = <ul>|</ul>
temp.menu1.1 {
   NO.after = |  |*| |  |*|  
   NO.linkWrap = <li>|</li>
}]]>
</description>
    <property name="NO" type="NO_TXT" />
  </type>
  <type id="typolink" name="typolink">
    <property name="__getATagParams" type="func" />
    <property name="parameter" type="stdWrap" />
    <property name="section" type="stdWrap" />
    <property name="JSwindow_params" type="list" />
    <property name="target" type="stdWrap" />
    <property name="title" type="stdWrap" />
    <property name="extTarget" type="stdWrap" />
    <property name="no_cache" type="stdWrap" />
    <property name="addQueryString" type="string" />
    <property name="additionalParams" type="stdWrap" />
    <property name="useCacheHash" type="bool" />
    <property name="userFunc" type="custom" />
    <property name="returnLast" type="list:url\\target" />
    <property name="ATagBeforeWrap" type="bool" />
    <property name="wrap" type="wrap" />
  </type>
  <type id="USER" name="USER">
    <property name="userFunc" type="string" />
    <property name="__custom" type="1" />
  </type>
</tsref>
